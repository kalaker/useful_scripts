#!/usr/bin/env bash

#############################################################################
# This script adds the JMU LabPrint printers to a computer. This script has #
# been tested on Linux Mint 18 and macOS Sierra, but should reasonably work #
# on any *nix-based OS with CUPS. On systems where `lpadmin` is located in  #
# /sbin/ (Debian), this script will always need to be run as root.          #
# The printers are added as Generic PostScript devices.                     #
#                                                                           #
# Author: Kyle Laker <kyle@laker.email>                                     #
# Licensed under the MIT License                                            #
#############################################################################

#------------------
# Global variables
#------------------
# A service to get your IP address as a string
ip_api_url="https://api.ipify.org"
# Prefix to use before printer names
printer_display_prefix="JMU"
# Name of the Black & White printer
bw_printer="LabPrintBW"
# Name of the color printer
color_printer="LabPrintColor"
# Domain and user for the labprint printers
lab_print_domain="labprint.jmu.edu"
lpd_user="labremoteprint"

#-----------
# Functions
#-----------

#--------------------------------------------------------------------------
# Adds the provided printer. Name is set to JMU-$1. Location is JMU Labs &
# Libraries. Driver is a Generic PostScript Driver.
# Custom options:
#   Duplex=DuplexNoTumble: A setting for enabling duplex printing
#   Option1=True: A setting (particularly on macOS) to enable duplex
#                 printing
#--------------------------------------------------------------------------
configure_printer() {
    local generic_ps_ppd="drv:///sample.drv/generic.ppd"
    local printer_location="JMU Labs & Libraries"
    local printer_uri="lpd://${lpd_user}@${lab_print_domain}/${1}"
    echo "    Adding printer: ${1}"
    if [[ "$no_duplex" = false ]]; then
        lpadmin -p "JMU-${1}" -E\
            -v "${printer_uri}"\
            -L "${printer_location}"\
            -m "${generic_ps_ppd}"\
            -o "Duplex=DuplexNoTumble"\
            -o "Option1=True"
    else
        lpadmin -p "JMU-${1}" -E\
            -v "${printer_uri}"\
            -L "${printer_location}"\
            -m "${generic_ps_ppd}"
    fi
}

#------------------------------------------------------------------------
# Ensure the user is somehow connected to the campus network. All JMU IP
# addresses begin with 134.126.
#------------------------------------------------------------------------
check_connected_to_jmu() {
    local ip_address
    ip_address="$(curl -s "${ip_api_url}")"
    if [ "${ip_address#134.126}" != "${ip_address}" ]; then
        ip_checks_out=true
    else
        ip_checks_out=false
    fi
}

#----------------------------------------------------------------------------
# Basically just for making it easier to list which printers are being added
#----------------------------------------------------------------------------
add_printers() {
    if [[ "$no_bw_printer" == false ]]; then
        configure_printer "${bw_printer}"
    fi
    if [[ $no_color_printer == false ]]; then
        configure_printer "${color_printer}"
    fi
}

#--------------------------------------------------------------------------
# Ensures the current user has the privileges as part of the lpadmin group
# to be adding & configuring printers.
#--------------------------------------------------------------------------
check_group() {
    user_in_a_cups_system_group=false
    cups_system_group_list=$(grep SystemGroup /etc/cups/cups-files.conf | cut -d' ' -f2-)
    for group in $cups_system_group_list; do
        if id -Gn | grep -q "$group"; then
            user_in_a_cups_system_group=true
            break;
        fi
    done
    if [ "$UID" -eq "0" ]; then
        user_in_a_cups_system_group=true
    fi
}

parse_args() {
    no_bw_printer=false
    no_color_printer=false
    no_duplex=false
    while [ "$#" -gt 0 ]; do
    case "$1" in
        -h|--help) show_help; exit;;

        --no-bw-printer) no_bw_printer=true; shift 1;;
        --no-color-printer) no_color_printer=true; shift 1;;
        --no-duplex) no_duplex=true; shift 1;;

        --bw-printer-name=*) bw_printer="${1#*=}"; shift 1;;
        --color-printer-name=*) color_printer="${1#*=}"; shift 1;;

        *) show_help; exit 1;;
    esac
done
}

show_help() {
    echo "labprintconfig [OPTION]..."
    echo " DESCRIPTION"
    echo "  By default, this will install both the color and BW labprint"
    echo "  printers with duplex printing, and requires the computer be"
    echo "  connected to the network in some way. The printers are added"
    echo "  as ${printer_display_prefix}-${bw_printer} and ${printer_display_prefix}-${color_printer}"
    echo " "
    echo " OPTIONS"
    echo "  -h, --help"
    echo "          print this help text"
    echo "  --no-bw-printer"
    echo "          do not add the black & white printer during install"
    echo "  --no-color-printer"
    echo "          do not add the color printer during install"
    echo "  --no-duplex"
    echo "          do not configure the ability for duplex printing"
    echo "  --bw-printer-name=NAME"
    echo "          set the name of the black & white printer on the server"
    echo "  --color-printer-name=NAME"
    echo "          set the name of the color printer on the server"
    echo ""
    echo " EXIT CODES"
    echo "  1  - \`lpadmin\` command is unavailable"
    echo "  2  - No printers have been set to be added"
    echo "  3  - User is not a group with permissions to modify cups config"
}

exists() {
  type "$1" >/dev/null 2>&1
}

#--------------------------------------------------------------
# Controls the flow, main logic, and most output of the script
#--------------------------------------------------------------
main() {
    parse_args "$@"
    if ! exists lpadmin; then
        echo "!!! \`lpadmin\` in not in \$PATH. This script will not work."
        echo "    Please ensure that the cups-client (or equivalent) package"
        echo "    is installed. If \`lpadmin\` is in /sbin/, then this script"
        echo "    will need to be run as root."
        echo "    Exiting..."
        exit 1
    fi
    if [[ "$no_bw_printer" == true ]] && [[ "$no_color_printer" == true ]]; then
        echo "!!! No printers to be added."
        echo "    Exiting."
        exit 2
    elif [[ "$no_bw_printer" == true ]]; then
        echo "==> The following printer will be configured: ${color_printer}"
    elif [[ "$no_color_printer" == true ]]; then
        echo "==> The following printer will be configured: ${bw_printer}"
    else
        echo "==> The following printers will be configured: ${bw_printer} & ${color_printer}"
    fi
    check_connected_to_jmu
    if [[ "$ip_checks_out" = false ]]; then
        echo "==> INFO: Proceeding, but you may not be connected to the JMU network."
        echo "    You will not be able to print to the labprint printers until"
        echo "    you successfully connect through a wired or wireless connection"
        echo "    on campus."
    fi
    check_group
    if [[ "$user_in_a_cups_system_group" == false ]]; then
        echo "!!! ERROR: Improper permissions. The printers have not been added."
        echo "==> You do not have the required permissions to make modifications"
        echo "    to the printers on this computers. Please try running this again"
        echo "    as an administrator or with \`sudo\`."
        echo "    If it helps, acceptable groups are:"
        echo "      ${cups_system_group_list}"
        exit 3
    fi
    echo "==> Adding printers..."
    add_printers
    echo "==> The LabPrint printers have been added."
    exit 0
}

#-------------------------
# Actually run the script
#-------------------------
main "$@"
